// automatically generated by the FlatBuffers compiler, do not modify

package gg.generations.rarecandy.pokeutils.tracm;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class TrackFlag_Bool extends Table {
    public static void ValidateVersion() {
        Constants.FLATBUFFERS_23_5_26();
    }

    public static TrackFlag_Bool getRootAsTrackFlag_Bool(ByteBuffer _bb) {
        return getRootAsTrackFlag_Bool(_bb, new TrackFlag_Bool());
    }

    public static TrackFlag_Bool getRootAsTrackFlag_Bool(ByteBuffer _bb, TrackFlag_Bool obj) {
        _bb.order(ByteOrder.LITTLE_ENDIAN);
        return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb));
    }

    public void __init(int _i, ByteBuffer _bb) {
        __reset(_i, _bb);
    }

    public TrackFlag_Bool __assign(int _i, ByteBuffer _bb) {
        __init(_i, _bb);
        return this;
    }

    public boolean value() {
        int o = __offset(4);
        return o != 0 ? 0 != bb.get(o + bb_pos) : false;
    }

    public static int createTrackFlag_Bool(FlatBufferBuilder builder,
                                           boolean value) {
        builder.startTable(1);
        TrackFlag_Bool.addValue(builder, value);
        return TrackFlag_Bool.endTrackFlag_Bool(builder);
    }

    public static void startTrackFlag_Bool(FlatBufferBuilder builder) {
        builder.startTable(1);
    }

    public static void addValue(FlatBufferBuilder builder, boolean value) {
        builder.addBoolean(0, value, false);
    }

    public static int endTrackFlag_Bool(FlatBufferBuilder builder) {
        int o = builder.endTable();
        return o;
    }

    public static final class Vector extends BaseVector {
        public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) {
            __reset(_vector, _element_size, _bb);
            return this;
        }

        public TrackFlag_Bool get(int j) {
            return get(new TrackFlag_Bool(), j);
        }

        public TrackFlag_Bool get(TrackFlag_Bool obj, int j) {
            return obj.__assign(__indirect(__element(j), bb), bb);
        }
    }
}

