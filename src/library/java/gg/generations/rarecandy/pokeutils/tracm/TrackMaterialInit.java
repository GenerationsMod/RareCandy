// automatically generated by the FlatBuffers compiler, do not modify

package gg.generations.rarecandy.pokeutils.tracm;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class TrackMaterialInit extends Table {
    public static void ValidateVersion() {
        Constants.FLATBUFFERS_23_5_26();
    }

    public static TrackMaterialInit getRootAsTrackMaterialInit(ByteBuffer _bb) {
        return getRootAsTrackMaterialInit(_bb, new TrackMaterialInit());
    }

    public static TrackMaterialInit getRootAsTrackMaterialInit(ByteBuffer _bb, TrackMaterialInit obj) {
        _bb.order(ByteOrder.LITTLE_ENDIAN);
        return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb));
    }

    public void __init(int _i, ByteBuffer _bb) {
        __reset(_i, _bb);
    }

    public TrackMaterialInit __assign(int _i, ByteBuffer _bb) {
        __init(_i, _bb);
        return this;
    }

    public String name() {
        int o = __offset(4);
        return o != 0 ? __string(o + bb_pos) : null;
    }

    public ByteBuffer nameAsByteBuffer() {
        return __vector_as_bytebuffer(4, 1);
    }

    public ByteBuffer nameInByteBuffer(ByteBuffer _bb) {
        return __vector_in_bytebuffer(_bb, 4, 1);
    }

    public TrackMaterialValueList list() {
        return list(new TrackMaterialValueList());
    }

    public TrackMaterialValueList list(TrackMaterialValueList obj) {
        int o = __offset(6);
        return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null;
    }

    public static int createTrackMaterialInit(FlatBufferBuilder builder,
                                              int nameOffset,
                                              int listOffset) {
        builder.startTable(2);
        TrackMaterialInit.addList(builder, listOffset);
        TrackMaterialInit.addName(builder, nameOffset);
        return TrackMaterialInit.endTrackMaterialInit(builder);
    }

    public static void startTrackMaterialInit(FlatBufferBuilder builder) {
        builder.startTable(2);
    }

    public static void addName(FlatBufferBuilder builder, int nameOffset) {
        builder.addOffset(0, nameOffset, 0);
    }

    public static void addList(FlatBufferBuilder builder, int listOffset) {
        builder.addOffset(1, listOffset, 0);
    }

    public static int endTrackMaterialInit(FlatBufferBuilder builder) {
        int o = builder.endTable();
        return o;
    }

    public static final class Vector extends BaseVector {
        public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) {
            __reset(_vector, _element_size, _bb);
            return this;
        }

        public TrackMaterialInit get(int j) {
            return get(new TrackMaterialInit(), j);
        }

        public TrackMaterialInit get(TrackMaterialInit obj, int j) {
            return obj.__assign(__indirect(__element(j), bb), bb);
        }
    }
}

