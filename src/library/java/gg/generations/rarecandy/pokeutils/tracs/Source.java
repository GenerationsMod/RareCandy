package gg.generations.rarecandy.pokeutils.tracs;// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class Source extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_5_26(); }
  public static Source getRootAsSource(ByteBuffer _bb) { return getRootAsSource(_bb, new Source()); }
  public static Source getRootAsSource(ByteBuffer _bb, Source obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Source __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ResourceLabel label() { return label(new ResourceLabel()); }
  public ResourceLabel label(ResourceLabel obj) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  public float x1() { int o = __offset(6); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float x2() { int o = __offset(8); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float y1() { int o = __offset(10); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float y2() { int o = __offset(12); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float z1() { int o = __offset(14); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float z2() { int o = __offset(16); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float w1() { int o = __offset(18); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  public float w2() { int o = __offset(20); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }

  public static int createSource(FlatBufferBuilder builder,
      int labelOffset,
      float x1,
      float x2,
      float y1,
      float y2,
      float z1,
      float z2,
      float w1,
      float w2) {
    builder.startTable(9);
    Source.addW2(builder, w2);
    Source.addW1(builder, w1);
    Source.addZ2(builder, z2);
    Source.addZ1(builder, z1);
    Source.addY2(builder, y2);
    Source.addY1(builder, y1);
    Source.addX2(builder, x2);
    Source.addX1(builder, x1);
    Source.addLabel(builder, labelOffset);
    return Source.endSource(builder);
  }

  public static void startSource(FlatBufferBuilder builder) { builder.startTable(9); }
  public static void addLabel(FlatBufferBuilder builder, int labelOffset) { builder.addOffset(0, labelOffset, 0); }
  public static void addX1(FlatBufferBuilder builder, float x1) { builder.addFloat(1, x1, 0.0f); }
  public static void addX2(FlatBufferBuilder builder, float x2) { builder.addFloat(2, x2, 0.0f); }
  public static void addY1(FlatBufferBuilder builder, float y1) { builder.addFloat(3, y1, 0.0f); }
  public static void addY2(FlatBufferBuilder builder, float y2) { builder.addFloat(4, y2, 0.0f); }
  public static void addZ1(FlatBufferBuilder builder, float z1) { builder.addFloat(5, z1, 0.0f); }
  public static void addZ2(FlatBufferBuilder builder, float z2) { builder.addFloat(6, z2, 0.0f); }
  public static void addW1(FlatBufferBuilder builder, float w1) { builder.addFloat(7, w1, 0.0f); }
  public static void addW2(FlatBufferBuilder builder, float w2) { builder.addFloat(8, w2, 0.0f); }
  public static int endSource(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Source get(int j) { return get(new Source(), j); }
    public Source get(Source obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public SourceT unpack() {
    SourceT _o = new SourceT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(SourceT _o) {
    if (label() != null) _o.setLabel(label().unpack());
    else _o.setLabel(null);
    float _oX1 = x1();
    _o.setX1(_oX1);
    float _oX2 = x2();
    _o.setX2(_oX2);
    float _oY1 = y1();
    _o.setY1(_oY1);
    float _oY2 = y2();
    _o.setY2(_oY2);
    float _oZ1 = z1();
    _o.setZ1(_oZ1);
    float _oZ2 = z2();
    _o.setZ2(_oZ2);
    float _oW1 = w1();
    _o.setW1(_oW1);
    float _oW2 = w2();
    _o.setW2(_oW2);
  }
  public static int pack(FlatBufferBuilder builder, SourceT _o) {
    if (_o == null) return 0;
    int _label = _o.getLabel() == null ? 0 : ResourceLabel.pack(builder, _o.getLabel());
    return createSource(
      builder,
      _label,
      _o.getX1(),
      _o.getX2(),
      _o.getY1(),
      _o.getY2(),
      _o.getZ1(),
      _o.getZ2(),
      _o.getW1(),
      _o.getW2());
  }
}

