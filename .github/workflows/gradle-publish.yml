# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Build Gradle JAR

on:
  push:
    branches:
      - development

jobs:
  gradle:
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 19
        uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 19
          cache: gradle

      - name: Store gradle.properties secrets
        env:
          MAVEN_REPO_PROPERTIES: ${{ secrets.MAVEN_REPO_PROPERTIES }}
        shell: bash
        run: |
          mkdir -p ~/.gradle/
          echo "GRADLE_USER_HOME=${HOME}/.gradle" >> $GITHUB_ENV
          echo "${MAVEN_REPO_PROPERTIES}" > ~/.gradle/gradle.properties

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: Execute Gradle build
        run: ./gradlew build

      # The USERNAME and TOKEN need to correspond to the credentials environment variables used in
      # the publishing section of your build.gradle
      - name: Automatic Releases
        uses: marvinpinto/action-automatic-releases@v1.2.1
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: false
          title: "Latest Release"
          files: |
            *.jar
