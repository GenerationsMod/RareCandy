package gg.generations.rarecandy.pokeutils.tracs;// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class ConditionValue_Float extends Table {
    public static void ValidateVersion() {
        Constants.FLATBUFFERS_23_5_26();
    }

    public static ConditionValue_Float getRootAsConditionValue_Float(ByteBuffer _bb) {
        return getRootAsConditionValue_Float(_bb, new ConditionValue_Float());
    }

    public static ConditionValue_Float getRootAsConditionValue_Float(ByteBuffer _bb, ConditionValue_Float obj) {
        _bb.order(ByteOrder.LITTLE_ENDIAN);
        return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb));
    }

    public void __init(int _i, ByteBuffer _bb) {
        __reset(_i, _bb);
    }

    public ConditionValue_Float __assign(int _i, ByteBuffer _bb) {
        __init(_i, _bb);
        return this;
    }

    public float value() {
        int o = __offset(4);
        return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f;
    }

    public static int createConditionValue_Float(FlatBufferBuilder builder,
                                                 float value) {
        builder.startTable(1);
        ConditionValue_Float.addValue(builder, value);
        return ConditionValue_Float.endConditionValue_Float(builder);
    }

    public static void startConditionValue_Float(FlatBufferBuilder builder) {
        builder.startTable(1);
    }

    public static void addValue(FlatBufferBuilder builder, float value) {
        builder.addFloat(0, value, 0.0f);
    }

    public static int endConditionValue_Float(FlatBufferBuilder builder) {
        int o = builder.endTable();
        return o;
    }

    public static final class Vector extends BaseVector {
        public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) {
            __reset(_vector, _element_size, _bb);
            return this;
        }

        public ConditionValue_Float get(int j) {
            return get(new ConditionValue_Float(), j);
        }

        public ConditionValue_Float get(ConditionValue_Float obj, int j) {
            return obj.__assign(__indirect(__element(j), bb), bb);
        }
    }

    public ConditionValue_FloatT unpack() {
        ConditionValue_FloatT _o = new ConditionValue_FloatT();
        unpackTo(_o);
        return _o;
    }

    public void unpackTo(ConditionValue_FloatT _o) {
        float _oValue = value();
        _o.setValue(_oValue);
    }

    public static int pack(FlatBufferBuilder builder, ConditionValue_FloatT _o) {
        if (_o == null) return 0;
        return createConditionValue_Float(
                builder,
                _o.getValue());
    }
}

