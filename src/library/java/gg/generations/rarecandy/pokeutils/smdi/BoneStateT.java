package gg.generations.rarecandy.pokeutils.smdi;// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

public class BoneStateT {
  private int bone;
  private float posX;
  private float posY;
  private float posZ;
  private float rotX;
  private float rotY;
  private float rotZ;

  public int getBone() { return bone; }

  public void setBone(int bone) { this.bone = bone; }

  public float getPosX() { return posX; }

  public void setPosX(float posX) { this.posX = posX; }

  public float getPosY() { return posY; }

  public void setPosY(float posY) { this.posY = posY; }

  public float getPosZ() { return posZ; }

  public void setPosZ(float posZ) { this.posZ = posZ; }

  public float getRotX() { return rotX; }

  public void setRotX(float rotX) { this.rotX = rotX; }

  public float getRotY() { return rotY; }

  public void setRotY(float rotY) { this.rotY = rotY; }

  public float getRotZ() { return rotZ; }

  public void setRotZ(float rotZ) { this.rotZ = rotZ; }


  public BoneStateT() {
    this.bone = 0;
    this.posX = 0.0f;
    this.posY = 0.0f;
    this.posZ = 0.0f;
    this.rotX = 0.0f;
    this.rotY = 0.0f;
    this.rotZ = 0.0f;
  }
}

