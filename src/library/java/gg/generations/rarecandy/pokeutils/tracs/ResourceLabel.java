package gg.generations.rarecandy.pokeutils.tracs;// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class ResourceLabel extends Table {
    public static void ValidateVersion() {
        Constants.FLATBUFFERS_23_5_26();
    }

    public static ResourceLabel getRootAsResourceLabel(ByteBuffer _bb) {
        return getRootAsResourceLabel(_bb, new ResourceLabel());
    }

    public static ResourceLabel getRootAsResourceLabel(ByteBuffer _bb, ResourceLabel obj) {
        _bb.order(ByteOrder.LITTLE_ENDIAN);
        return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb));
    }

    public void __init(int _i, ByteBuffer _bb) {
        __reset(_i, _bb);
    }

    public ResourceLabel __assign(int _i, ByteBuffer _bb) {
        __init(_i, _bb);
        return this;
    }

    public String resourceName() {
        int o = __offset(4);
        return o != 0 ? __string(o + bb_pos) : null;
    }

    public ByteBuffer resourceNameAsByteBuffer() {
        return __vector_as_bytebuffer(4, 1);
    }

    public ByteBuffer resourceNameInByteBuffer(ByteBuffer _bb) {
        return __vector_in_bytebuffer(_bb, 4, 1);
    }

    public long resourceType() {
        int o = __offset(6);
        return o != 0 ? (long) bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L;
    }

    public static int createResourceLabel(FlatBufferBuilder builder,
                                          int resourceNameOffset,
                                          long resourceType) {
        builder.startTable(2);
        ResourceLabel.addResourceType(builder, resourceType);
        ResourceLabel.addResourceName(builder, resourceNameOffset);
        return ResourceLabel.endResourceLabel(builder);
    }

    public static void startResourceLabel(FlatBufferBuilder builder) {
        builder.startTable(2);
    }

    public static void addResourceName(FlatBufferBuilder builder, int resourceNameOffset) {
        builder.addOffset(0, resourceNameOffset, 0);
    }

    public static void addResourceType(FlatBufferBuilder builder, long resourceType) {
        builder.addInt(1, (int) resourceType, (int) 0L);
    }

    public static int endResourceLabel(FlatBufferBuilder builder) {
        int o = builder.endTable();
        return o;
    }

    public static final class Vector extends BaseVector {
        public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) {
            __reset(_vector, _element_size, _bb);
            return this;
        }

        public ResourceLabel get(int j) {
            return get(new ResourceLabel(), j);
        }

        public ResourceLabel get(ResourceLabel obj, int j) {
            return obj.__assign(__indirect(__element(j), bb), bb);
        }
    }

    public ResourceLabelT unpack() {
        ResourceLabelT _o = new ResourceLabelT();
        unpackTo(_o);
        return _o;
    }

    public void unpackTo(ResourceLabelT _o) {
        String _oResourceName = resourceName();
        _o.setResourceName(_oResourceName);
        long _oResourceType = resourceType();
        _o.setResourceType(_oResourceType);
    }

    public static int pack(FlatBufferBuilder builder, ResourceLabelT _o) {
        if (_o == null) return 0;
        int _resourceName = _o.getResourceName() == null ? 0 : builder.createString(_o.getResourceName());
        return createResourceLabel(
                builder,
                _resourceName,
                _o.getResourceType());
    }
}

