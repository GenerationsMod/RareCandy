// automatically generated by the FlatBuffers compiler, do not modify

package com.pokemod.pokeutils.tranm;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class FixedQuatTrack extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_3_3(); }
  public static FixedQuatTrack getRootAsFixedQuatTrack(ByteBuffer _bb) { return getRootAsFixedQuatTrack(_bb, new FixedQuatTrack()); }
  public static FixedQuatTrack getRootAsFixedQuatTrack(ByteBuffer _bb, FixedQuatTrack obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public FixedQuatTrack __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Vec3s vec() { return vec(new Vec3s()); }
  public Vec3s vec(Vec3s obj) { int o = __offset(4); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }

  public static void startFixedQuatTrack(FlatBufferBuilder builder) { builder.startTable(1); }
  public static void addVec(FlatBufferBuilder builder, int vecOffset) { builder.addStruct(0, vecOffset, 0); }
  public static int endFixedQuatTrack(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public FixedQuatTrack get(int j) { return get(new FixedQuatTrack(), j); }
    public FixedQuatTrack get(FixedQuatTrack obj, int j) {  return obj.__assign(Table.__indirect(__element(j), bb), bb); }
  }
}

