// automatically generated by the FlatBuffers compiler, do not modify

package gg.generations.rarecandy.pokeutils.tracm;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class Track extends Table {
    public static void ValidateVersion() {
        Constants.FLATBUFFERS_23_5_26();
    }

    public static Track getRootAsTrack(ByteBuffer _bb) {
        return getRootAsTrack(_bb, new Track());
    }

    public static Track getRootAsTrack(ByteBuffer _bb, Track obj) {
        _bb.order(ByteOrder.LITTLE_ENDIAN);
        return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb));
    }

    public void __init(int _i, ByteBuffer _bb) {
        __reset(_i, _bb);
    }

    public Track __assign(int _i, ByteBuffer _bb) {
        __init(_i, _bb);
        return this;
    }

    public String trackPath() {
        int o = __offset(4);
        return o != 0 ? __string(o + bb_pos) : null;
    }

    public ByteBuffer trackPathAsByteBuffer() {
        return __vector_as_bytebuffer(4, 1);
    }

    public ByteBuffer trackPathInByteBuffer(ByteBuffer _bb) {
        return __vector_in_bytebuffer(_bb, 4, 1);
    }

    public long res1() {
        int o = __offset(6);
        return o != 0 ? (long) bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L;
    }

    public long res2() {
        int o = __offset(8);
        return o != 0 ? (long) bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L;
    }

    public long res3() {
        int o = __offset(10);
        return o != 0 ? (long) bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L;
    }

    public TrackMaterialTimeline materialAnimation() {
        return materialAnimation(new TrackMaterialTimeline());
    }

    public TrackMaterialTimeline materialAnimation(TrackMaterialTimeline obj) {
        int o = __offset(12);
        return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null;
    }

    public TrackFlags materialFlags() {
        return materialFlags(new TrackFlags());
    }

    public TrackFlags materialFlags(TrackFlags obj) {
        int o = __offset(14);
        return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null;
    }

    public static int createTrack(FlatBufferBuilder builder,
                                  int trackPathOffset,
                                  long res1,
                                  long res2,
                                  long res3,
                                  int materialAnimationOffset,
                                  int materialFlagsOffset) {
        builder.startTable(6);
        Track.addMaterialFlags(builder, materialFlagsOffset);
        Track.addMaterialAnimation(builder, materialAnimationOffset);
        Track.addRes3(builder, res3);
        Track.addRes2(builder, res2);
        Track.addRes1(builder, res1);
        Track.addTrackPath(builder, trackPathOffset);
        return Track.endTrack(builder);
    }

    public static void startTrack(FlatBufferBuilder builder) {
        builder.startTable(6);
    }

    public static void addTrackPath(FlatBufferBuilder builder, int trackPathOffset) {
        builder.addOffset(0, trackPathOffset, 0);
    }

    public static void addRes1(FlatBufferBuilder builder, long res1) {
        builder.addInt(1, (int) res1, (int) 0L);
    }

    public static void addRes2(FlatBufferBuilder builder, long res2) {
        builder.addInt(2, (int) res2, (int) 0L);
    }

    public static void addRes3(FlatBufferBuilder builder, long res3) {
        builder.addInt(3, (int) res3, (int) 0L);
    }

    public static void addMaterialAnimation(FlatBufferBuilder builder, int materialAnimationOffset) {
        builder.addOffset(4, materialAnimationOffset, 0);
    }

    public static void addMaterialFlags(FlatBufferBuilder builder, int materialFlagsOffset) {
        builder.addOffset(5, materialFlagsOffset, 0);
    }

    public static int endTrack(FlatBufferBuilder builder) {
        int o = builder.endTable();
        return o;
    }

    public static final class Vector extends BaseVector {
        public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) {
            __reset(_vector, _element_size, _bb);
            return this;
        }

        public Track get(int j) {
            return get(new Track(), j);
        }

        public Track get(Track obj, int j) {
            return obj.__assign(__indirect(__element(j), bb), bb);
        }
    }
}

