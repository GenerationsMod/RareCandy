package gg.generations.rarecandy.pokeutils.tracs;// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class ConditionValue_Int extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_5_26(); }
  public static ConditionValue_Int getRootAsConditionValue_Int(ByteBuffer _bb) { return getRootAsConditionValue_Int(_bb, new ConditionValue_Int()); }
  public static ConditionValue_Int getRootAsConditionValue_Int(ByteBuffer _bb, ConditionValue_Int obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public ConditionValue_Int __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long value() { int o = __offset(4); return o != 0 ? (long)bb.getInt(o + bb_pos) & 0xFFFFFFFFL : 0L; }

  public static int createConditionValue_Int(FlatBufferBuilder builder,
      long value) {
    builder.startTable(1);
    ConditionValue_Int.addValue(builder, value);
    return ConditionValue_Int.endConditionValue_Int(builder);
  }

  public static void startConditionValue_Int(FlatBufferBuilder builder) { builder.startTable(1); }
  public static void addValue(FlatBufferBuilder builder, long value) { builder.addInt(0, (int) value, (int) 0L); }
  public static int endConditionValue_Int(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public ConditionValue_Int get(int j) { return get(new ConditionValue_Int(), j); }
    public ConditionValue_Int get(ConditionValue_Int obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
  public ConditionValue_IntT unpack() {
    ConditionValue_IntT _o = new ConditionValue_IntT();
    unpackTo(_o);
    return _o;
  }
  public void unpackTo(ConditionValue_IntT _o) {
    long _oValue = value();
    _o.setValue(_oValue);
  }
  public static int pack(FlatBufferBuilder builder, ConditionValue_IntT _o) {
    if (_o == null) return 0;
    return createConditionValue_Int(
      builder,
      _o.getValue());
  }
}

