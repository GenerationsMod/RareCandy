// automatically generated by the FlatBuffers compiler, do not modify

package gg.generations.rarecandy.pokeutils.gfbanm;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Struct;

import java.nio.ByteBuffer;

@SuppressWarnings("unused")
public final class Vec2 extends Struct {
    public void __init(int _i, ByteBuffer _bb) {
        __reset(_i, _bb);
    }

    public Vec2 __assign(int _i, ByteBuffer _bb) {
        __init(_i, _bb);
        return this;
    }

    public float u() {
        return bb.getFloat(bb_pos + 0);
    }

    public float v() {
        return bb.getFloat(bb_pos + 4);
    }

    public static int createVec2(FlatBufferBuilder builder, float u, float v) {
        builder.prep(4, 8);
        builder.putFloat(v);
        builder.putFloat(u);
        return builder.offset();
    }

    public static final class Vector extends BaseVector {
        public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) {
            __reset(_vector, _element_size, _bb);
            return this;
        }

        public Vec2 get(int j) {
            return get(new Vec2(), j);
        }

        public Vec2 get(Vec2 obj, int j) {
            return obj.__assign(__element(j), bb);
        }
    }

    public Vec2T unpack() {
        Vec2T _o = new Vec2T();
        unpackTo(_o);
        return _o;
    }

    public void unpackTo(Vec2T _o) {
        float _oU = u();
        _o.setU(_oU);
        float _oV = v();
        _o.setV(_oV);
    }

    public static int pack(FlatBufferBuilder builder, Vec2T _o) {
        if (_o == null) return 0;
        return createVec2(
                builder,
                _o.getU(),
                _o.getV());
    }
}

