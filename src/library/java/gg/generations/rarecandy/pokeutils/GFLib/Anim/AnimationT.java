// automatically generated by the FlatBuffers compiler, do not modify

package gg.generations.rarecandy.pokeutils.GFLib.Anim;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

public class AnimationT {
  private InfoT info;
  private BoneAnimationT skeleton;
  private MaterialAnimationT material;
  private SkinAnimationT visibility;
  private CommandAnimationT eventData;

  public InfoT getInfo() { return info; }

  public void setInfo(InfoT info) { this.info = info; }

  public BoneAnimationT getSkeleton() { return skeleton; }

  public void setSkeleton(BoneAnimationT skeleton) { this.skeleton = skeleton; }

  public MaterialAnimationT getMaterial() { return material; }

  public void setMaterial(MaterialAnimationT material) { this.material = material; }

  public SkinAnimationT getVisibility() { return visibility; }

  public void setVisibility(SkinAnimationT visibility) { this.visibility = visibility; }

  public CommandAnimationT getEventData() { return eventData; }

  public void setEventData(CommandAnimationT eventData) { this.eventData = eventData; }


  public AnimationT() {
    this.info = null;
    this.skeleton = null;
    this.material = null;
    this.visibility = null;
    this.eventData = null;
  }
  public static AnimationT deserializeFromBinary(byte[] fbBuffer) {
    return Animation.getRootAsAnimation(ByteBuffer.wrap(fbBuffer)).unpack();
  }
  public byte[] serializeToBinary() {
    FlatBufferBuilder fbb = new FlatBufferBuilder();
    Animation.finishAnimationBuffer(fbb, Animation.pack(fbb, this));
    return fbb.sizedByteArray();
  }
}

