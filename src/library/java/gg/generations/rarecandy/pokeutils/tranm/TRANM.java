package gg.generations.rarecandy.pokeutils.tranm;// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class TRANM extends Table {
    public static void ValidateVersion() {
        Constants.FLATBUFFERS_23_5_26();
    }

    public static TRANM getRootAsTRANM(ByteBuffer _bb) {
        return getRootAsTRANM(_bb, new TRANM());
    }

    public static TRANM getRootAsTRANM(ByteBuffer _bb, TRANM obj) {
        _bb.order(ByteOrder.LITTLE_ENDIAN);
        return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb));
    }

    public void __init(int _i, ByteBuffer _bb) {
        __reset(_i, _bb);
    }

    public TRANM __assign(int _i, ByteBuffer _bb) {
        __init(_i, _bb);
        return this;
    }

    public AnimationInfo info() {
        return info(new AnimationInfo());
    }

    public AnimationInfo info(AnimationInfo obj) {
        int o = __offset(4);
        return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null;
    }

    public BoneAnimation track() {
        return track(new BoneAnimation());
    }

    public BoneAnimation track(BoneAnimation obj) {
        int o = __offset(6);
        return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null;
    }

    public static int createTRANM(FlatBufferBuilder builder,
                                  int infoOffset,
                                  int trackOffset) {
        builder.startTable(2);
        TRANM.addTrack(builder, trackOffset);
        TRANM.addInfo(builder, infoOffset);
        return TRANM.endTRANM(builder);
    }

    public static void startTRANM(FlatBufferBuilder builder) {
        builder.startTable(2);
    }

    public static void addInfo(FlatBufferBuilder builder, int infoOffset) {
        builder.addOffset(0, infoOffset, 0);
    }

    public static void addTrack(FlatBufferBuilder builder, int trackOffset) {
        builder.addOffset(1, trackOffset, 0);
    }

    public static int endTRANM(FlatBufferBuilder builder) {
        int o = builder.endTable();
        return o;
    }

    public static void finishTRANMBuffer(FlatBufferBuilder builder, int offset) {
        builder.finish(offset);
    }

    public static void finishSizePrefixedTRANMBuffer(FlatBufferBuilder builder, int offset) {
        builder.finishSizePrefixed(offset);
    }

    public static final class Vector extends BaseVector {
        public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) {
            __reset(_vector, _element_size, _bb);
            return this;
        }

        public TRANM get(int j) {
            return get(new TRANM(), j);
        }

        public TRANM get(TRANM obj, int j) {
            return obj.__assign(__indirect(__element(j), bb), bb);
        }
    }

    public TRANMT unpack() {
        TRANMT _o = new TRANMT();
        unpackTo(_o);
        return _o;
    }

    public void unpackTo(TRANMT _o) {
        if (info() != null) _o.setInfo(info().unpack());
        else _o.setInfo(null);
        if (track() != null) _o.setTrack(track().unpack());
        else _o.setTrack(null);
    }

    public static int pack(FlatBufferBuilder builder, TRANMT _o) {
        if (_o == null) return 0;
        int _info = _o.getInfo() == null ? 0 : AnimationInfo.pack(builder, _o.getInfo());
        int _track = _o.getTrack() == null ? 0 : BoneAnimation.pack(builder, _o.getTrack());
        return createTRANM(
                builder,
                _info,
                _track);
    }
}

